{"version":3,"file":"static/js/60.7051f26d.chunk.js","mappings":"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","sources":["redux/films/films.selectors.js","Styles/Container.styled.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","service/genreFetcher.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Category/Category.styled.js","components/Category/Category.jsx","pages/Home.jsx"],"sourcesContent":["export const selectDayTopMovies = state => state.films.dayTopMovies;\nexport const selectWeekTopMovies = state => state.films.weekTopMovies;\nexport const selectTopRatedMovies = state => state.films.topRatedMovies;\nexport const selectSearchedMovies = state => state.films.searchedMovies;\nexport const selectFilmData = state => state.films.filmData;\nexport const selectData = state => state.films.filmData.data;\nexport const selectFilmCast = state => state.films.filmData.cast;\nexport const selectFilmReviews = state => state.films.filmData.reviews;\nexport const selectMoviesIsLoading = state => state.films.isLoading;\nexport const selectMoviesError = state => state.films.error;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #0d1117;\n  /* .header {\n    height: 60px;\n    display: flex;\n    align-items: center;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    border-radius: 10px;\n    margin-bottom: 25px;\n  }\n\n  .header-link {\n    padding: 20px;\n    text-decoration: none;\n    font-weight: 500;\n    color: black;\n    &:hover {\n      color: red;\n    }\n    &.active {\n      color: red;\n    }\n  } */\n\n  /* .back-btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 20px;\n    text-align: center;\n    text-decoration: none;\n    color: black;\n    width: 100px;\n    height: 40px;\n    border: 1px solid black;\n    border-radius: 10px;\n    &:hover {\n      color: red;\n      border: 1px solid red;\n    }\n  }\n  .movie-info-cover {\n    display: flex;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    border-radius: 10px;\n    margin-bottom: 25px;\n  }\n  .poster-image {\n    margin-right: 20px;\n    border-radius: 10px;\n  }\n\n  .details-link {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 20px;\n    text-align: center;\n    text-decoration: none;\n    color: black;\n    width: 80px;\n    height: 40px;\n    border: 1px solid black;\n    border-radius: 10px;\n\n    &.active {\n      color: red;\n      border: 1px solid red;\n    }\n    &:hover {\n      color: red;\n      border: 1px solid red;\n    }\n  }\n\n  .bold {\n    font-weight: 700;\n  } */\n`;\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  width: 184px;\n\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 8px;\n\n  .movie-title {\n    color: white;\n  }\n\n  .cover {\n    height: 100%;\n  }\n`;\n\nexport const StyledItemPoster = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 8px;\n  border-radius: 4px;\n`;\n\nexport const ShortInfo = styled.span`\n  font-size: 12px;\n  color: #ad9236;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { extractYear, genreFetcher } from 'service/genreFetcher';\nimport { BASE_POSTER_URL } from 'service/moviesAPI';\nimport { ShortInfo, StyledItem, StyledItemPoster } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n\n  const { id, poster_path, title, release_date, genre_ids } = movie;\n  const genres = genreFetcher(genre_ids);\n\n  return (\n    <StyledItem key={id}>\n      <Link\n        state={{ from: location }}\n        to={`/movies/${id}`}\n        className=\"movie-title\"\n      >\n        <div className=\"cover\">\n          <StyledItemPoster\n            src={BASE_POSTER_URL + poster_path}\n            alt={title + ' poster'}\n          />\n          <p>{title}</p>\n          <p>\n            <ShortInfo>{extractYear(release_date)},</ShortInfo>{' '}\n            {genres.slice(0, 2).map((genre, index) => {\n              return (\n                <ShortInfo key={index}>\n                  {genre}\n                  {index < genres.length - 1 ? ',' : ''}{' '}\n                </ShortInfo>\n              );\n            })}\n          </p>\n        </div>\n      </Link>\n    </StyledItem>\n  );\n};\n\nexport default MovieItem;\n","export const genreFetcher = ids => {\n  const result = ids.map(id => {\n    switch (id) {\n      case 28:\n        return (id = 'Бойовик');\n\n      case 12:\n        return 'Пригоди';\n\n      case 16:\n        return 'Мультфільм';\n\n      case 35:\n        return 'Комедія';\n\n      case 80:\n        return 'Кримінал';\n\n      case 99:\n        return 'Документальний';\n\n      case 18:\n        return 'Драма';\n\n      case 10751:\n        return 'Сімейний';\n\n      case 14:\n        return 'Фентезі';\n\n      case 36:\n        return 'Історичний';\n\n      case 27:\n        return 'Жахи';\n\n      case 10402:\n        return 'Музика';\n\n      case 9648:\n        return 'Детектив';\n\n      case 10749:\n        return 'Мелодрама';\n\n      case 878:\n        return 'Фантастика';\n\n      case 10770:\n        return 'Телефільм';\n\n      case 53:\n        return 'Трилер';\n\n      case 10752:\n        return 'Військовий';\n\n      case 37:\n        return 'Вестерн';\n\n      default:\n        return 'Невідомий Жанр';\n    }\n  });\n\n  return result;\n};\n\nexport const extractYear = dateString => {\n  const parts = dateString.split('-');\n\n  return parts[0];\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  gap: 24px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 24px;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport React from 'react';\nimport { StyledList } from './MovieList.styled';\n\nconst MovieList = ({ topDayMovie }) => {\n  return (\n    <StyledList>\n      {topDayMovie.map(movie => {\n        return <MovieItem movie={movie} key={movie.id} />;\n      })}\n    </StyledList>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const CategoryStyled = styled.div`\n  padding-bottom: 34px;\n  padding-top: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  border-bottom: 1px solid grey;\n`;\n\nexport const CategoryTitleStyled = styled.p`\n  font-size: 24px;\n  margin-bottom: 18px;\n`;\n\nexport const ShowMoreBtn = styled.button`\n  display: block;\n  height: 35px;\n  margin-left: auto;\n\n  font-size: 16px;\n  color: gray;\n  background-color: transparent;\n\n  border: 2px solid #ad9236;\n  border-radius: 10px;\n\n  &:hover {\n    border: 2px solid yellow;\n    color: #ad9236;\n  }\n`;\n","import MovieList from 'components/MovieList/MovieList';\nimport React, { useState } from 'react';\nimport {\n  CategoryStyled,\n  CategoryTitleStyled,\n  ShowMoreBtn,\n} from './Category.styled';\n\nconst Category = ({ moviesFromCategory, categoryTitle }) => {\n  const [visibleItems, setVisibleItems] = useState(5);\n  const [showAll, setShowAll] = useState(false);\n\n  const toggleShowItems = () => {\n    if (showAll) {\n      setVisibleItems(5); // Повертаємо до 5 елементів\n    } else {\n      setVisibleItems(moviesFromCategory.length); // Відображаємо всі елементи\n    }\n    setShowAll(!showAll); // Перемикаємо стан\n  };\n\n  return (\n    <CategoryStyled>\n      <CategoryTitleStyled>{categoryTitle}</CategoryTitleStyled>\n      <MovieList topDayMovie={moviesFromCategory.slice(0, visibleItems)} />\n      <ShowMoreBtn onClick={toggleShowItems}>\n        {showAll ? 'Приховати' : 'Показати більше'}\n      </ShowMoreBtn>\n    </CategoryStyled>\n  );\n};\n\nexport default Category;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport {\n  selectDayTopMovies,\n  selectMoviesError,\n  selectTopRatedMovies,\n  selectWeekTopMovies,\n} from '../redux/films/films.selectors';\nimport {\n  topDayMoviesThunk,\n  topWeekMoviesThunk,\n  topRatedMoviesThunk,\n} from '../redux/films/filmsOperations';\nimport { StyledContainer } from 'Styles/Container.styled';\nimport Category from 'components/Category/Category';\n\nconst Home = () => {\n  const topDayMovie = useSelector(selectDayTopMovies);\n  const topWeekMovie = useSelector(selectWeekTopMovies);\n  const topRatedMovies = useSelector(selectTopRatedMovies);\n  const movieError = useSelector(selectMoviesError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(topDayMoviesThunk());\n    dispatch(topWeekMoviesThunk());\n    dispatch(topRatedMoviesThunk());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <StyledContainer>\n        {movieError && Notiflix.Notify.failure(movieError)}\n        <Category moviesFromCategory={topDayMovie} categoryTitle={'Топ Дня'} />\n        <Category\n          moviesFromCategory={topWeekMovie}\n          categoryTitle={'Топ Тижня'}\n        />\n        <Category\n          moviesFromCategory={topRatedMovies}\n          categoryTitle={'Найпопулярніші'}\n        />\n      </StyledContainer>\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["selectDayTopMovies","state","films","dayTopMovies","selectWeekTopMovies","weekTopMovies","selectTopRatedMovies","topRatedMovies","selectMoviesError","error","StyledContainer","styled","_templateObject","_taggedTemplateLiteral","StyledItem","StyledItemPoster","_templateObject2","ShortInfo","_templateObject3","_ref","dateString","movie","location","useLocation","id","poster_path","title","release_date","genre_ids","genres","map","_jsx","children","Link","from","to","concat","className","_jsxs","src","BASE_POSTER_URL","alt","split","slice","genre","index","length","StyledList","topDayMovie","MovieItem","CategoryStyled","CategoryTitleStyled","ShowMoreBtn","moviesFromCategory","categoryTitle","_useState","useState","_useState2","_slicedToArray","visibleItems","setVisibleItems","_useState3","_useState4","showAll","setShowAll","MovieList","onClick","useSelector","topWeekMovie","movieError","dispatch","useDispatch","useEffect","topDayMoviesThunk","topWeekMoviesThunk","topRatedMoviesThunk","Notiflix","Category"],"sourceRoot":""}