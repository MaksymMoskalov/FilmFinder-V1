{"version":3,"file":"static/js/377.3d37e6ba.chunk.js","mappings":"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","sources":["pages/MovieInfo.jsx"],"sourcesContent":["import { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport {\n  NavLink,\n  useParams,\n  Route,\n  Routes,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'service/moviesAPI';\nimport { Blocks } from 'react-loader-spinner';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieInfo = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const movieDetails = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    movieDetails();\n  }, [movieId]);\n\n  return (\n    <section>\n      <Link to={backLinkHref.current} className=\"back-btn\">\n        Go back\n      </Link>\n      {movie !== null && (\n        <div className=\"movie-info-cover\">\n          <img\n            src={BASE_IMG_URL + movie.poster_path}\n            alt=\"\"\n            className=\"poster-image\"\n          />\n          <div>\n            <h1>{movie.original_title}</h1>\n            <span className=\"bold\">Overview</span>\n            <p>{movie.overview}</p>\n            <span className=\"bold\">Genres:</span>\n            <p>\n              {movie.genres\n                .map(({ name }) => {\n                  return `${name}`;\n                })\n                .join(', ')}\n            </p>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <NavLink to={'cast'} className=\"details-link\">\n          Cast\n        </NavLink>\n        <NavLink to={'reviews'} className=\"details-link\">\n          Reviews\n        </NavLink>\n      </div>\n\n      <Suspense\n        fallback={\n          <Blocks\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n          />\n        }\n      >\n        <Routes>\n          <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n          <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n        </Routes>\n      </Suspense>\n\n      {error && window.alert(error)}\n    </section>\n  );\n};\n\nexport default MovieInfo;\n"],"names":["Cast","lazy","Reviews","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","movieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","getMovieDetails","sent","t0","message","stop","apply","arguments","_jsxs","children","_jsx","Link","to","current","className","src","poster_path","alt","original_title","overview","genres","map","_ref2","name","concat","join","NavLink","Suspense","fallback","Blocks","visible","height","width","ariaLabel","Routes","Route","path","element","window","alert"],"sourceRoot":""}