{"version":3,"file":"static/js/382.6b419772.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieInfo.jsx","redux/films/films.selectors.js","service/genreFetcher.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BackDrop = styled.section`\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 92vh;\n  width: 100%;\n  position: relative;\n  top: 0;\n  left: 0;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 66px;\n  padding-top: 200px;\n\n  /* padding-left: 400px;\n  padding-right: 400px; */\n`;\n\nexport const PosterWrapper = styled.div`\n  display: block;\n  border-radius: 8px;\n  width: 250px;\n  height: 375;\n  overflow: hidden;\n  .poster-image {\n    width: 100%;\n  }\n`;\n\nexport const MovieData = styled.div`\n  width: 600px;\n  max-height: 375px;\n  font-size: 18px;\n  padding: 12px;\n  border-radius: 8px;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n\nexport const Text = styled.span`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const Shorts = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ActionBtn = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: #ef4234;\n  border: none;\n  padding: 8px;\n  border-radius: 10px;\n  color: white;\n  font-size: 16px;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n  &:last-child {\n    background-color: #5662f6;\n  }\n\n  .button-icon {\n    margin-left: 8px;\n  }\n`;\n","import React, { Suspense, lazy } from 'react';\nimport { MdFavorite } from 'react-icons/md';\nimport { MdReviews } from 'react-icons/md';\n\nimport {\n  ActionBtn,\n  BackDrop,\n  ButtonWrapper,\n  InfoWrapper,\n  MovieData,\n  Overview,\n  PosterWrapper,\n  Shorts,\n  Text,\n  Title,\n} from './MovieInfo.styled';\nimport { Route, Routes } from 'react-router-dom';\nimport { Blocks } from 'react-loader-spinner';\nimport { BASE_BACKDROP_URL, LARGE_POSTER_URL } from 'service/moviesAPI';\nimport { extractYear } from 'service/genreFetcher';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieInfo = ({ movie, backLinkHref, movieId }) => {\n  return (\n    movie && (\n      <BackDrop\n        style={{\n          backgroundImage: `radial-gradient(circle, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0.7) 50%, rgba(0, 0, 0, 1) 100%), url(${\n            BASE_BACKDROP_URL + movie.backdrop_path\n          })`,\n        }}\n      >\n        <InfoWrapper>\n          <PosterWrapper>\n            <img\n              src={LARGE_POSTER_URL + movie.poster_path}\n              alt=\"\"\n              className=\"poster-image\"\n            />\n          </PosterWrapper>\n          <MovieData>\n            <Title>{movie.title}</Title>\n            <Shorts>\n              <Text>{extractYear(movie.release_date)}</Text>\n              <Text>{movie.runtime}хв</Text>\n              {movie.adult ? <Text>18+</Text> : ''}\n              <Text>{movie.origin_country[0]}</Text>\n              <Text>\n                {movie.genres.map(({ name }) => {\n                  return <Text>{name}</Text>;\n                })}\n              </Text>\n            </Shorts>\n            <Overview>{movie.overview}</Overview>\n            <ButtonWrapper>\n              <ActionBtn type=\"button\">\n                До улюблених <MdFavorite className=\"button-icon\" />\n              </ActionBtn>\n              <ActionBtn type=\"button\">\n                До переглянутих <MdReviews className=\"button-icon\" />\n              </ActionBtn>\n            </ButtonWrapper>\n          </MovieData>\n        </InfoWrapper>\n\n        {/* <Link to={backLinkHref.current} className=\"back-btn\">\n          Go back\n        </Link>\n        <div>\n          <NavLink to={'cast'} className=\"details-link\">\n            Cast\n          </NavLink>\n          <NavLink to={'reviews'} className=\"details-link\">\n            Reviews\n          </NavLink>\n        </div> */}\n\n        <Suspense\n          fallback={\n            <Blocks\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              ariaLabel=\"blocks-loading\"\n            />\n          }\n        >\n          <Routes>\n            <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n          </Routes>\n        </Suspense>\n      </BackDrop>\n    )\n  );\n};\n\nexport default MovieInfo;\n","import { useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { movieDetailsThunk } from '../redux/films/filmsOperations';\nimport { selectData } from '../redux/films/films.selectors';\n\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\n\nconst InfoPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const dispatch = useDispatch();\n  const movie = useSelector(selectData);\n\n  useEffect(() => {\n    if (!movieId) return;\n    dispatch(movieDetailsThunk(movieId));\n  }, [dispatch, movieId]);\n\n  return (\n    <MovieInfo backLinkHref={backLinkHref} movie={movie} movieId={movieId} />\n  );\n};\n\nexport default InfoPage;\n","export const selectDayTopMovies = state => state.films.dayTopMovies;\nexport const selectWeekTopMovies = state => state.films.weekTopMovies;\nexport const selectTopRatedMovies = state => state.films.topRatedMovies;\nexport const selectSearchedMovies = state => state.films.searchedMovies;\nexport const selectFilmData = state => state.films.filmData;\nexport const selectData = state => state.films.filmData.data;\nexport const selectFilmCast = state => state.films.filmData.cast;\nexport const selectFilmReviews = state => state.films.filmData.reviews;\nexport const selectMoviesIsLoading = state => state.films.isLoading;\nexport const selectMoviesError = state => state.films.error;\n","export const genreFetcher = ids => {\n  const result = ids.map(id => {\n    switch (id) {\n      case 28:\n        return (id = 'Бойовик');\n\n      case 12:\n        return 'Пригоди';\n\n      case 16:\n        return 'Мультфільм';\n\n      case 35:\n        return 'Комедія';\n\n      case 80:\n        return 'Кримінал';\n\n      case 99:\n        return 'Документальний';\n\n      case 18:\n        return 'Драма';\n\n      case 10751:\n        return 'Сімейний';\n\n      case 14:\n        return 'Фентезі';\n\n      case 36:\n        return 'Історичний';\n\n      case 27:\n        return 'Жахи';\n\n      case 10402:\n        return 'Музика';\n\n      case 9648:\n        return 'Детектив';\n\n      case 10749:\n        return 'Мелодрама';\n\n      case 878:\n        return 'Фантастика';\n\n      case 10770:\n        return 'Телефільм';\n\n      case 53:\n        return 'Трилер';\n\n      case 10752:\n        return 'Військовий';\n\n      case 37:\n        return 'Вестерн';\n\n      default:\n        return 'Невідомий Жанр';\n    }\n  });\n\n  return result;\n};\n\nexport const extractYear = dateString => {\n  const parts = dateString.split('-');\n\n  return parts[0];\n};\n"],"names":["BackDrop","styled","_templateObject","_taggedTemplateLiteral","InfoWrapper","_templateObject2","PosterWrapper","_templateObject3","MovieData","_templateObject4","Text","_templateObject5","Title","_templateObject6","Shorts","_templateObject7","Overview","_templateObject8","ButtonWrapper","_templateObject9","ActionBtn","_templateObject10","Cast","lazy","Reviews","_ref","movie","movieId","backLinkHref","_jsxs","style","backgroundImage","concat","BASE_BACKDROP_URL","backdrop_path","children","_jsx","src","LARGE_POSTER_URL","poster_path","alt","className","title","extractYear","release_date","runtime","adult","origin_country","genres","map","_ref2","name","overview","type","MdFavorite","MdReviews","Suspense","fallback","Blocks","visible","height","width","ariaLabel","Routes","Route","path","element","_location$state$from","_location$state","useParams","location","useLocation","useRef","state","from","dispatch","useDispatch","useSelector","selectData","useEffect","movieDetailsThunk","MovieInfo","selectDayTopMovies","films","dayTopMovies","selectWeekTopMovies","weekTopMovies","selectTopRatedMovies","topRatedMovies","filmData","data","selectMoviesError","error","genreFetcher","ids","id","dateString","split"],"sourceRoot":""}